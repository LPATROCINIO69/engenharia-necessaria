name: CI/CD Backend

on:
  push:
    branches: [main]
      
  pull_request:
    branches: [main]
      

jobs:
  build-and-test-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      # 1️⃣ clonar o repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configurar Node.js
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
          
      # 3️⃣ Entrar na pasta backend e instalar dependências
      - name: Install dependencies (Backend)
        working-directory: ./backend
        run: npm install

      # 4️⃣ Build do backend
      - name: Build Backend
        working-directory: ./backend
        run: npm run dist 

      # 5️⃣ Executar os testes do backend
      - name: Run Backend Tests
        working-directory: ./backend
        run: npm run test:build && npm test -- --coverage

      # 6️⃣ Gera relatório coverage e faz upload como artefato
      - name: Upload Test Coverage
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./backend/coverage

  # NOVO JOB: DEPLOY PARA GCP
  deploy-to-gcp:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest
    needs: build-and-test-backend
    # Executa apenas no push para main (não em PRs)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      # 1️⃣ Clonar repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Autenticação no GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      # 3️⃣ Setup do Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: '${{ secrets.GCP_PROJECT_ID }}'

      # 4️⃣ Configurar Docker para Google Container Registry
      - name: Configure Docker for GCR
        run: gcloud auth configure-docker --quiet

      # 5️⃣ Entrar na pasta backend e construir imagem Docker
      - name: Build Docker image
        working-directory: ./backend
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend-api:${{ github.sha }} .

      # 6️⃣ Fazer push da imagem para Google Container Registry
      - name: Push Docker image to GCR
        working-directory: ./backend
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend-api:${{ github.sha }}

      # 7️⃣ Deploy no Google Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy backend-api \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend-api:${{ github.sha }} \
            --region southamerica-east1 \
            --platform managed \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --service-account="engenharia-necessaria@references-yen-413813.iam.gserviceaccount.com" \
            --set-env-vars=NODE_ENV=production \
            --update-secrets=DATABASE_URL=DB_SECRET:latest \
            --quiet

      # 8️⃣ Obter URL do serviço deployado
      - name: Get Service URL
        run: |
          URL=$(gcloud run services describe backend-api --region southamerica-east1 --format='value(status.url)')
          echo "🚀 Service deployed successfully: $URL"
          echo "SERVICE_URL=$URL" >> $GITHUB_ENV

      # 9️⃣ (Opcional) Postar URL no summary
      - name: Update GitHub Summary
        run: |
          echo "### 🚀 Backend Deployed Successfully" >> $GITHUB_STEP_SUMMARY
          echo "**Service URL:** ${{ env.SERVICE_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy Time:** $(date)" >> $GITHUB_STEP_SUMMARY